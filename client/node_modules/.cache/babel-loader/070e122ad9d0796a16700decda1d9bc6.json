{"ast":null,"code":"var _jsxFileName = \"/root/code/geolocationServiceDise-o/client/src/components/GetVehicles.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport Leaflet from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLeaflet.Icon.Default.imagePath = '../node_modules/leaflet';\n\nconst GetVehicles = () => {\n  _s();\n\n  const [vehicles, setVehicles] = useState([]);\n\n  const getVehicles = async () => {\n    try {\n      const response = await fetch(\"http://34.221.26.86:50001/vehicles\");\n      const jsonData = await response.json();\n      setVehicles(jsonData);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      getVehicles();\n    }, 5000);\n    return () => clearInterval(timer);\n  });\n  console.log(vehicles);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [51.505, -0.09],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 28\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        class: \"thead-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Latitud\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Longitud\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Hora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: vehicles.map(vehicle => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: vehicle.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: vehicle.latitude\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: vehicle.longitude\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: vehicle.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: vehicle.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }, this);\n};\n\n_s(GetVehicles, \"F+3Wwuoj92cy/fYg4DPIUSmtheM=\");\n\n_c = GetVehicles;\nexport default GetVehicles;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetVehicles\");","map":{"version":3,"sources":["/root/code/geolocationServiceDise-o/client/src/components/GetVehicles.js"],"names":["React","Fragment","useEffect","useState","Leaflet","MapContainer","TileLayer","Marker","Popup","useMapEvents","Icon","Default","imagePath","GetVehicles","vehicles","setVehicles","getVehicles","response","fetch","jsonData","json","err","console","error","message","timer","setInterval","clearInterval","log","map","vehicle","id","latitude","longitude","time","date"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport Leaflet from 'leaflet';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents,  } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css';\n\nLeaflet.Icon.Default.imagePath =\n'../node_modules/leaflet'\n\nconst GetVehicles = () => {\n\n    const [vehicles, setVehicles] = useState([]);\n\n    const getVehicles = async () => {\n        try {\n            const response = await fetch(\"http://34.221.26.86:50001/vehicles\");\n            const jsonData = await response.json();\n\n            setVehicles(jsonData);\n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    useEffect(() => {\n      const timer = setInterval(() => {\n        getVehicles();\n      }, 5000);\n      return () => clearInterval(timer);\n    });\n\n    console.log(vehicles);\n\n    return (<Fragment>\n      \n       <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\n  <TileLayer\n    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n  />\n  <Marker position={[51.505, -0.09]}>\n    <Popup>\n      A pretty CSS3 popup. <br /> Easily customizable.\n    </Popup>\n  </Marker>\n</MapContainer>\n\n      <table class=\"table\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">ID</th>\n            <th scope=\"col\">Latitud</th>\n            <th scope=\"col\">Longitud</th>\n            <th scope=\"col\">Fecha</th>\n            <th scope=\"col\">Hora</th>\n          </tr>\n        </thead>\n        <tbody>\n        {vehicles.map(vehicle => (\n          <tr>\n            <td>{vehicle.id}</td>\n            <td>{vehicle.latitude}</td>\n            <td>{vehicle.longitude}</td>\n            <td>{vehicle.time}</td>\n            <td>{vehicle.date}</td>\n          </tr>\n        ))}\n        </tbody>\n      </table></Fragment>);\n\n    };\n\nexport default GetVehicles;\n"]},"metadata":{},"sourceType":"module"}